// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package b

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Object struct {
	Foo *string `pulumi:"foo"`
}

type ObjectOutput struct{ *pulumi.OutputState }

func (ObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Object)(nil)).Elem()
}

func (o ObjectOutput) ToObjectOutput() ObjectOutput {
	return o
}

func (o ObjectOutput) ToObjectOutputWithContext(ctx context.Context) ObjectOutput {
	return o
}

func (o ObjectOutput) Foo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Object) *string { return v.Foo }).(pulumi.StringPtrOutput)
}

type ObjectPtrOutput struct{ *pulumi.OutputState }

func (ObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Object)(nil)).Elem()
}

func (o ObjectPtrOutput) ToObjectPtrOutput() ObjectPtrOutput {
	return o
}

func (o ObjectPtrOutput) ToObjectPtrOutputWithContext(ctx context.Context) ObjectPtrOutput {
	return o
}

func (o ObjectPtrOutput) Elem() ObjectOutput {
	return o.ApplyT(func(v *Object) Object {
		if v != nil {
			return *v
		}
		var ret Object
		return ret
	}).(ObjectOutput)
}

func (o ObjectPtrOutput) Foo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Object) *string {
		if v == nil {
			return nil
		}
		return v.Foo
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ObjectOutput{})
	pulumi.RegisterOutputType(ObjectPtrOutput{})
}
